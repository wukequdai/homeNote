正课:
1. ****定时器: 
  什么是: 让程序按指定时间间隔自动执行任务
  
1. 周期性定时器: 
   让程序按指定时间间隔反复自动执行一项任务
   何时: 动画
   如何: 3件事: 
     1. ***任务函数: function task(){...}
     2. 启动定时器: 将任务函数放入定时，并设定时间间隔
         timer=setInterval(task, ms)
     3. 停止定时器: 
         clearInterval(timer); timer=null;
    2种方式停止: 
     1. 手动停止: 
     2. 自动停止: 在任务函数中设定临界值
                       如果达到临界值，自动调用clearInterval(timer);

2. 一次性定时器: 
   让程序先等待一定时间间隔,再执行一次任务。执行后自动停止
   何时: 延迟任务的执行
   如何: 3件事儿 
     1. 任务函数: task
     2. 启动定时器: timer=setTimeout(task, ms) 
     3. 停止: clearTimeout(timer)

如何选择: 
   只要反复执行，就用周期性
   只要只执行一次，就用一次性

****定时器的原理: 
   定时器中的回调函数，必须在所有主程序执行完，也就是主程序最后一句话之后，才能执行！
   
for(var i=0;i<3;i++){
	setTimeout("console.log(i)",0)
}
输出三个3
动画叠加：反复无节制的创建新定时器，作用在同一个元素上导致混乱
解决：1.判断只有在没有动画波荡时才能启动新定时器，
	if（this.timer==null）x





