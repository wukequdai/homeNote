正课: 
1. 修改:
   属性: 
     标准属性:
     扩展属性(自定义属性)
   样式: 
     内联样式
     内部/外部样式表

DOM标准: 
     核心DOM: 可操作一切结构化文档的API, 包括HTML和XML
                       万能!
                       繁琐!
     HTML DOM: 专门操作HTML文档的简化版DOM API
                仅对常用的复杂的API进行了简化
                不是万能!  
                简单
     开发: 先用简单的，再用复杂的补充――以实现效果为目标

1. 属性: 
   标准属性: HTML标准中规定的属性
      核心DOM: 4个操作
         1. 读取属性值: 2种: 
             1. 先获得属性节点对象，再获得节点对象的值:
                 var attrNode=elem.attributes[i/属性名];
                                        elem.getAttributeNode(属性名)
                 attrNode.value――属性值
           *2. 直接获得属性值
                  var value=elem.getAttribute("属性名");
         2. 修改属性值: 
                  elem.setAttribute("属性名", value);
         3. 判断是否包含指定属性: 
             var bool=elem.hasAttribute("属性名")
         4. 移除属性: 
              elem.removeAttribute("属性名")

     HTML DOM: 所有标准属性已经成为内存中元素对象的属性
             elem.属性名 - 普通对象的属性用法完全一样
             elem.class -> elem.className

     property vs attribute:
        attribute: 出现在元素开始标签中的属性
        property: 仅在内存中有，没有出现在元素开始标签中
     所有标准属性: 即是attribute，也可是property
     特例: .checked  .disabled  .selected
         只能用.访问,值为bool类型,不能用get/setAttribute操作

  扩展(自定义)属性: 
     何时: 1. 用于自定义行为的添加
              2. 缓存客户端数据
     核心DOM: 可以
     不能使用HTML DOM: 

     HTML5: 定义了扩展属性的规范: ――强烈建议
         1. 添加扩展属性: 属性名必须是"data-属性名"
         2. 凡是加了data-前缀的属性,都可用: 
	elem.dataset.属性名

    课堂练习: 获得焦点和失去焦点事件
        txt.onfocus 当获得焦点时自动触发
        txt.onblur 当失去焦点时自动触发

2. 样式: 
   内联样式: elem.style.属性名
         强调: 属性名: 去横线，变驼峰
           比如: css: background-color => backgroundColor
                          list-style-type => listStyleType
      问题: 一句话只能修改一个属性
      解决: 今后都是先用class定义不同场景的元素样式
               再用DOM控制何时穿哪个class
    问题: elem.style只能获得内联样式！
              无法获得从样式表中层叠或继承来的样式
    解决: 
   内部/外部样式表: 
     *获取计算后的样式: 
	var style对象=getComputedStyle(elem) 
                 var value=style.属性名
        强调: 仅用作读取，不能修改！想修改: 去修改内联样式
      也可直接修改样式表中的样式: 1. 危险; 2. 繁琐
          1. 找样式表对象: var sheet=document.styleSheets[i]
          2. 找样式表中要修改的样式规则(CSSRule):
              var rule=sheet.cssRules[i]
          3. 找规则对象的style属性中的css属性: 
                 rule.style.transition="opacity 1s linear"




