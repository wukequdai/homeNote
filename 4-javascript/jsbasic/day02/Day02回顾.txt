1、回顾
	1、JS基础语法
		1、JS运行环境
			1、独立安装的JS引擎
				NodeJS
			2、嵌入浏览器中的JS引擎
				1、将JS嵌入在元素的事件中
					<button onclick="JS脚本">
				2、将JS嵌入在<script>元素中
					<script>
						JS脚本
					</script>
				3、将JS脚本写在外部脚本文件中
					****.js
					<script src="js文件路径"></script>
		2、语法规范
			1、语句
				使用;作为结尾
				大小写敏感
				英文标点
				由表达式、关键字、运算符组成
			2、注释
				//
				/**/
2、变量和常量
	1、变量
		1、什么是变量
			一个可以变化的数据
			变量：内存中的一段存储空间
			变量名：给变量起一个名字，是内存空间的别名
			值：保存在内存中的数据。
		2、声明语法
			1、声明
				var 变量名;
				变量名=值;

				var 变量名=值;
				注意：var 关键字可以省略，省略之后就是全局变量，尽量不要省略var
			2、一次性声明多个变量
				var 名1,名2=值,...,名n;
			3、变量名命名规范
				1、不允许使用JS中的关键字和保留关键字
					var,const .... 不允许使用
				2、字母，数字，下划线，$组成
					user-name 错误
				3、不能以数字开头
				4、尽量见名知意
				5、可以采用 "匈牙利","驼峰","下划线"命名法
			4、变量的使用
				1、未经初始化的变量
					声明了但未赋值
					结果为：undefined
					var stuName;
					console.log(stuName); //undefined
				2、使用 未声明的变量
					console.log(stuGender);
					结果为：错误
				3、对变量进行的存取操作
					1、存 - 为变量赋值(SET操作)
						使用 赋值运算符 =
						变量名=值;

						var sum = 12+15;
						运算顺序：从右到左
						只要变量出现在 = 的左边，一定是赋值
					2、取 - 使用变量的值(GET操作)
						只要变量不出现在=的左边，一律是取值操作
						var sum = 125;//存
						console.log(sum);//取

						var newSum=sum;
						sum : 取值
						newSum : 赋值

						*************
						var num=15;
						num = num + 15;
						console.log(num);
						结果为:30
	2、常量
		1、什么是常量
			一旦声明好，就不允许在程序运行过程中被修改的数据
		2、声明常量
			const 常量名=值;
3、数据类型
	数据类型分类：
	1、原始类型(基本类型)
		1、number(数字)类型
			可用于表示 32位的整数和64位的浮点数
			表示 十进制
			表示 八进制 ：var n1=0123;
			表示 十六进制 ：var n2=0x1F;

			小数：
				123.456
				45.6e5
		2、string(字符串)类型
			表示一系列的 文本字符数据
			由Unicode字符，数字，标点组成

			在使用时，需要使用 "" 或 '' 引起来
			var str1 = "你好";
			var str2 = "12345";//字符串
			var num = 12345;

			"张".charCodeAt(); //字符在 内存中的存储形式(十进制数字)

			"张".charCodeAt().toString(2) ：二进制
			"张".charCodeAt().toString(16) ：十六进制

			var str = "\u5f20";//将16进制数字转换成对应的字符
			
			汉字范围：\u4e00 ~ \u9fa5

			转义字符：
				\n : 换行
				\t : 制表符
				\r : 回车
				\" : "
				\' : '
				\\ : \
		3、boolean(布尔类型)
			取值：
				1、true
					真
				2、false
					假

				ex:
					var r1 = true;
					var r2 = false;
			注意：
				boolean 类型参与运算时，是按照
				true 当 1 算
				false 当 0 算
		4、null
			声明对象未赋值
			空
		5、undefined
			1、声明变量未赋值
			2、访问对象的属性不存在时
	2、引用类型
		...













